gzip on;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;

# Real IP (for CloudFlare)
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 104.16.0.0/12;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 173.245.48.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2c0f:f248::/32;
set_real_ip_from 2a06:98c0::/29;
real_ip_header X-Forwarded-For;


# Redirect all HTTP traffic to HTTPS
server {
	listen 80;
	server_name test.datacore.app;
	return 301 https://$host$request_uri;
}

upstream my_http_servers {
	# load balance with 2 node runners
	ip_hash;
	server 0.0.0.0:4420;
	# server 0.0.0.0:4431;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name test.datacore.app;

	ssl_certificate      /data/cert.pem;
	ssl_certificate_key  /data/privkey.pem;

	add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options "nosniff";
	add_header Strict-Transport-Security "max-age=63072000";
	add_header Content-Security-Policy "object-src 'none'; frame-ancestors 'none'";

        index index.html index.htm;

        location / {
		root /sitebuild;
		expires 1h;
                try_files $uri $uri/ @app;
        }

	location /eventlogs/ {
		alias /data/events/;
		expires -1;
	}

        location /assets/ {
                alias /data/assets/assets/;
                access_log off;
                expires max;
        }

        location /assets/data/ {
                alias /data/assets/data/;
                expires -1;
        }

	location /profiles/ {
		expires -1;
		alias /data/profiles/;

		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
	}

	location @app {
		proxy_pass http://my_http_servers;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}
