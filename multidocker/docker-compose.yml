version: '3'
volumes:
    sitebuild:
    assets:
    profiles:
    traindata:
    nginx-logs:
    site-logs:
    bot-logs:
    datacore-mongo:

services:
    gittower:
        image: datacore/gittower
        build: 
            context: contexts/gittower
            args:
                ALPINE_VERSION: ${ALPINE_VERSION}
                NODE_VERSION: ${NODE_VERSION}
        deploy:
            restart_policy: 
                condition: on-failure
        container_name: gittower  
        env_file:
            - .env
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - .:/docker
        profiles: ["all", "gittower"]

    pm2-discord:
        image: datacore/pm2-discord
        build: 
            context: contexts/pm2-discord
            args:
                ALPINE_VERSION:
                NODE_VERSION:
                PM2_ERROR_URL:
                PM2_INFO_URL:
        profiles: ["all", "fullstack", "site-server", "website"]
        
    website:
        build:
            context: contexts/website
            additional_contexts:
                source: https://github.com/stt-datacore/website.git#${WEBSITE_BRANCH}
            args:
                ALPINE_VERSION: ${ALPINE_VERSION} 
                NODE_VERSION: ${NODE_VERSION}                                
                GATSBY_ASSETS_URL: ${GATSBY_ASSETS_URL}
                GATSBY_DATACORE_URL: ${GATSBY_DATACORE_URL} 
        deploy:
            restart_policy: 
                condition: on-failure
                
        container_name: DCWebsite  
        volumes:
            - sitebuild:/sitebuild:rw
        profiles: [ "all", "website", "asset-server", "site-server", "fullstack" ]

    asset-server:
        image: datacore/asset-server
        build:
            context: contexts/asset-server 
            additional_contexts:
                source: https://github.com/stt-datacore/asset-server.git#${ASSET_BRANCH}
            args:
                ALPINE_VERSION:
                NODE_VERSION:

        container_name: DCAssetServer 
        deploy:
            restart_policy: 
                condition: on-failure
        volumes:
            - ${ASSETS_DIR}:/assets:rw"
        environment:
            - OUT_PATH=/assets/
        profiles: [ "all", "asset-server", "website", "fullstack" ]

    datacoredb:
        image: mongo:4.4.6
        container_name: datacoredb
        volumes:
            - datacore-mongo:/data/db
        environment:
            - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        profiles: ["all", "site-server", "bot", "fullstack"]

    local-dev-db:
        image: mongo:4.4.6
        container_name: local-dev-db
        volumes:
            - datacore-mongo:/data/db
        ports:
            - '27017-27019:27017-27019'
        environment:
            - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        profiles: ["local-mongo"]

    site-server:
        image: datacore/site-server
        build:
            context: contexts/site-server
            additional_contexts: 
                source: https://github.com/stt-datacore/site-server.git#${SERVER_BRANCH}
                pm2-discord: contexts/pm2-discord
            target: ${BUILD_TYPE}
            args:
                $NODE_VERSION:
        environment:
            - PROFILE_DATA_PATH=${PROFILE_DATA_PATH}
            - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
            - LOG_PATH=${LOG_PATH}
            - STT_BOT_USERNAME=${STT_BOT_USERNAME}
            - STT_BOT_PASSWORD=${STT_BOT_PASSWORD}
            - JWT_SECRET=${JWT_SECRET}
            - MONGO_CONN_STRING=${MONGO_CONN_STRING}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_PROFILE_COLLECTION=${MONGO_PROFILE_COLLECTION}
            - MONGO_TRACKED_VOYAGES_COLLECTION=${MONGO_TRACKED_VOYAGES_COLLECTION}
            - MONGO_TRACKED_ASSIGNMENTS_COLLECTION=${MONGO_TRACKED_ASSIGNMENTS_COLLECTION}
            - MONGO_FBB_SOLVES_COLLECTION=${MONGO_FBB_SOLVES_COLLECTION}
            - MONGO_FBB_TRIALS_COLLECTION=${MONGO_FBB_TRIALS_COLLECTION}
            - MONGO_FBB_COLLECTION=${MONGO_FBB_COLLECTION}
            - CORS_ORIGIN=${CORS_ORIGIN}
        container_name: DCSiteServer 
        deploy:
            restart_policy: 
                condition: on-failure
        ports:
            - "4420:4420"
        volumes:
            - site-logs:/data/logs:rw
            - profiles:/data/profiles:rw"
            - ${SQLITE_DB}:/database
        depends_on:
            - pm2-discord
            - datacoredb
        profiles: ["all", "site-server", "fullstack"]

    nginx:
        image: nginx:alpine${ALPINE_VERSION}
        container_name: NginxServer
        deploy:
            restart_policy:
                condition: on-failure
        ports:
            - "80:80"
            - "442:442"
        volumes:
            - sitebuild:/sitebuild:ro
            - ${ASSETS_DIR}:/assets:ro
            - profiles:/profiles:ro
            - nginx-logs:/var/log/nginx:rw
            - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf:rw
        depends_on:
            - site-server
            - datacoredb
        profiles: [ "all", "website", "asset-server", "site-server", "fullstack" ]

    node_exporter:
        image: prom/node-exporter
        container_name: node_exporter
        ports:
            - "9100:9100"
        profiles: [ "all", "monitoring" ]

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - "9090:9090"
        command: 
            - --config.file=/etc/prometheus/prometheus.yml
        volumes:
            - "./contexts/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
        depends_on:
            - cadvisor
        profiles: [ "all", "monitoring" ]

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:latest
        container_name: cadvisor
        deploy:
            restart_policy: 
                condition: on-failure
        ports:
            - "8080:8080"
        volumes:
            - "/:/rootfs:ro"
            - "/var/run:/var/run:rw"
            - "/sys:/sys:ro"
            - "/var/lib/docker/:/var/lib/docker:ro"
        command: [ "--housekeeping_interval=30s", "--docker_only", "--disable_metrics=disk,network,tcp,udp,percpu,sched,process" ] 
        profiles: [ "all", "monitoring" ]

    rsync-host:
        image: hermsi/alpine-sshd
        container_name: RSyncHost
        deploy:
            restart_policy: 
                condition: on-failure
        ports:
            - "1337:22"
        volumes:
            - "sitebuild:/data/sitebuild:rw"
            - "assets:/data/assets:rw"
            - "profiles:/data/profiles:rw"
            - "traindata:/data/traindata:rw"
            - "nginx-logs:/logs/nginx:ro"
            - "site-logs:/logs/site-server:ro"
        environment:
            - ROOT_PASSWORD=${RSYNC_PASSWORD}
        profiles: [ "all", "rsync", "fullstack" ]

    cpp-image-analysis:
        image: datacore/cpp-image-analysis
        build: 
            context: contexts/cpp-image-analysis
            additional_contexts:
                source: https://github.com/stt-datacore/cpp-image-analysis.git
            args:
                ALPINE_VERSION:
        container_name: DCImageAnalysis 
        deploy:
            restart_policy: 
                condition: on-failure
        ports:
            - "5000:5000"
        volumes:
            - "sitebuild:/sitebuild:ro"
            - "./contexts/cvdata:/data:ro"
            - "traindata:/traindata:rw"
        depends_on:
            - pm2-discord
        profiles: [ "all", "bot" ]

    bot: 
        image: datacore/bot
        build:
            context: contexts/bot
            additional_contexts: 
                source: https://github.com/stt-datacore/bot.git#${BOT_BRANCH}
            target: ${BUILD_TYPE}
            args:
                NODE_VERSION:
        container_name: DCBot 
        deploy:
            restart_policy: 
                condition: on-failure
        volumes:
            - "profiles:/data/profiles:rw"
            - "sitebuild:/sitebuild:ro"
            - "bot-logs:/data/logs:rw"
            - "assets:/assets:ro"
        environment:
            - PROFILE_DATA_PATH=/data/profiles
            - DB_CONNECTION_STRING=sqlite:/data/datacore.db
            - LOG_PATH=/data/logs/
            - DC_DATA_PATH=/sitebuild/structured
            - CONFIG_PATH=/data/bot_config.json
            - INGFLIP_USERNAME=${INGFLIP_USERNAME}
            - INGFLIP_PASSWORD=${INGFLIP_PASSWORD}
            - BOT_TOKEN=${BOT_TOKEN}
            - ASSETS_URL=${GATSBY_ASSETS_URL}
            - DATACORE_URL=${GATSBY_DATACORE_URL}
            - MONGO_CONN_STRING=${MONGO_CONN_STRING}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_PROFILE_COLLECTION=${MONGO_PROFILE_COLLECTION}
            - MONGO_TRACKED_VOYAGES_COLLECTION=${MONGO_TRACKED_VOYAGES_COLLECTION}
            - MONGO_TRACKED_ASSIGNMENTS_COLLECTION=${MONGO_TRACKED_ASSIGNMENTS_COLLECTION}
        depends_on:
            - cpp-image-analysis
            - datacoredb
        profiles: ["all", "bot"]